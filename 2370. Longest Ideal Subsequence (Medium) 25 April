Code: 

class Solution {
public:
    int longestIdealString(string s, int k) {
        int n = s.size();
        int result = 0;

        vector<int> dp(26, 0);
        for(int i=0; i<n; i++){
            int currElement = s[i] - 'a';
            int leftLimit = max(0, currElement - k);
            int rightLimit = min(25, currElement + k);

            int longest = 0;
            for(int j=leftLimit; j <= rightLimit; j++){
                longest = max(longest, dp[j]);
            }

            dp[currElement] = max(dp[currElement], longest + 1);
            result = max(result, dp[currElement]);
        }
        return result;
    }
};
