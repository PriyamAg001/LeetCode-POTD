Code:

class Solution {
public:
    int topDownSolve(int n,  vector<int>& dp){
        // Step 2: Base Case:
        if(n == 0){
            return 0;
        }
        if(n == 1 || n == 2){
            return 1;
        }

        if(dp[n] != -1){
            return dp[n];
        }

        // Step 3: RR:
        dp[n] = topDownSolve(n-1 , dp) + topDownSolve(n-2, dp) + topDownSolve(n-3, dp);
        return dp[n];
    }

    int tribonacci(int n) {
        // step 1 : Create a dp array
        vector<int> dp(n+1);
        for(int i=0; i<=n; i++){
            dp[i] = -1;
        }
        return topDownSolve(n, dp);
    }
};
